## LaTeX

参考自博客：[https://liam.page/2014/09/08/latex-introduction/](https://liam.page/2014/09/08/latex-introduction/)

## latex 安装

官网：[https://tug.org/texlive/](https://tug.org/texlive/)

除了安装位置之外，其他的都保持默认即可

## 编辑器

+ TeXworks是TeX Live自带的编辑器，是跨平台的发行版

+ TeX的源代码是后缀为`.tex`的纯文本文件

## 启动TeXwoeks

>win + R
>
>输入：texworks

## 排版工具

TeXwoeks预设了(pdfTeX, pdfLaTeX, XeTeX, XeLaTeX等),下面基于**XeLaTeX**, 也可以使用子集2配置的排版工具

## 第一篇文档

```lateX
\documentclass[UTF8]{ctexart}
\title{你好，world!}
\author{深蓝}
\date{\today}
\begin{document}
\maketitle
\tableofcontents
\section{你好中国}
中国在East Asia.
\subsection{Hello Beijing}
北京是capital of China.
\subsubsection{Hello Dongcheng District}
\paragraph{Tian'anmen Square}
is in the center of Beijing
\subparagraph{Chairman Mao}
is in the center of 天安门广场。
\subsection{Hello 山东}
\paragraph{山东大学} is one of the best university in 山东。
\end{document}
```

说明：

1. 此处的第一行 `\documentclass{article}` 中包含了一个控制序列（或称命令/标记）。所谓控制序列，是以反斜杠 `\` 开头，以第一个***空格或非字母*** 的字符结束的一串文字。它们不被输出，但是他们会影响输出文档的效果。这里的控制序列是 `documentclass`，它后面紧跟着的 `{article}` 代表这个控制序列有一个必要的参数，该参数的值为 `article`。这个控制序列的作用，是调用名为 `article` 的文档类。

2. 此处的第二行以 `%` 开头。TeX 以百分号 `%` 作为注释标记。具体来说，TeX 会忽略从 `%` 开始到当前行末尾的所有内容。这些内容不会被输出，也不影响最终排版效果，只供人类阅读。若要输出 `%` 字符本身，则需要在 `%` 之前加上反斜杠 `\` 进行转义（escape）

3. 在注释行之后出现了控制序列 `begin`。这个控制序列总是与 `end` 成对出现。这两个控制序列以及他们中间的内容被称为「环境」；它们之后的第一个必要参数总是**一致的**，被称为环境名。

4. 只有在 `document` 环境中的内容，才会被正常输出到文档中去或是作为控制序列对文档产生影响。也就是说，在 `\end{document}` 之后插入任何内容都是无效的。

5. 从 `\documentclass{article}` 开始到 `\begin{document}` 之前的部分被称为导言区。你可以将导言区理解为是对整篇文档进行设置的区域——在导言区出现的控制序列，往往会影响整篇文档的格式。

## <span style="color:red">中英文混排：</span>

在 TeXworks 编辑框中输入以下内容，**以 UTF-8 编码保存，使用 XeLaTeX 编译**：

```latex
\documentclass[UTF8]{ctexart}
\begin{document}
你好，world!
\end{document}
```

## 组织文章

### 作者、标题、日期

```latex
\documentclass[UTF8]{ctexart}
\author{深蓝}
\title{你好,World}
\date{\today}

\begin{document}
\maketitle
你好，world!
\end{document}
```

导言区复杂了很多，但和之前的文档主要的区别只有一处：定义了标题、作者、日期。

在 `document` 环境中，除了原本的`你好，world!`，还多了一个控制序列 `maketitle`。这个控制序列能将在导言区中定义的标题、作者、日期按照预定的格式展现出来。

> 使用`titling`宏包可以修改上述默认格式。参考[TeXdoc](http://texdoc.net/texmf-dist/doc/latex/titling/titling.pdf)。

### 章节和段落

```latex
\documentclass[UTF8]{ctexart}
\author{深蓝}
\title{你好,World}
\date{\today}

\begin{document}
\maketitle
\section{你好中国}
中国在East Asia.
\subsection{Hello Beijing}
北京是capital of China.
\subsubsection{Hello Dongcheng District}
\paragraph{Tian'anmen Square}
is in the center of Beijing
\subparagraph{Chairman Mao}
is in the center of 天安门广场
\subsection{hello 山东}
\paragraph{山东大学}is one of the best university in 山东。
\end{document}
```

在文档类 `article`/`ctexart` 中，定义了五个控制序列来调整行文组织结构。他们分别是

- `\section{·}`
- `\subsection{·}`
- `\subsubsection{·}`
- `\paragraph{·}`
- `\subparagraph{·}`

> 在`report`/`ctexrep`中，还有`\chapter{·}`；在文档类`book`/`ctexbook`中，还定义了`\part{·}`。

### 插入目录

```latex
\maketitle
\tableofcontents
```

```latex
\section{你好中国}
中国在East Asia.

中国在East Asia.
```

两次「中国在East Asia.」中夹有一个空行，但输出却只有一个换行并没有空行。这是因为 LaTeX 将一个换行当做是一个简单的空格来处理，如果需要换行另起一段，则需要用两个换行（一个空行）来实现。

## 插入数学公式

```latex
\usepackage{amsmath}
```

LaTeX 的数学模式有两种：行内模式 (inline) 和行间模式 (display)。前者在正文的行文中，插入数学公式；后者独立排列单独成行，并自动居中。

在行文中，使用 `$ ... $` 可以插入行内公式，使用 `\[ ... \]` 可以插入行间公式，如果需要对行间公式进行编号，则可以使用 `equation` 环境：

```latex
\begin{equation}
...
\end{equation}

```

> 行内公式也可以使用 `\(...\)` 或者 `\begin{math} ... \end{math}` 来插入，但略显麻烦。
> 无编号的行间公式也可以使用 `\begin{displaymath} ... \end{displaymath}` 或者 `\begin{equation*} ... \end{equation*}` 来插入，但略显麻烦。（`equation*` 中的 `*` 表示环境不编号）
> 也有 plainTeX 风格的 `$$ ... $$` 来插入不编号的行间公式。但是在 LaTeX 中这样做会改变行文的默认行间距，不推荐。请参考[我的回答](https://www.zhihu.com/question/27589739/answer/37237684)。

### 上下标

```latex
\documentclass{article}
\usepackage{amsmath}
\begin{document}
Einstein 's $E=mc^2$.

\[ E=mc^2. \]

\begin{equation}
E=mc^2.
\end{equation}
\end{document}
```

在这里提一下关于公式标点使用的规范。行内公式和行间公式对标点的要求是不同的：行内公式的标点，应该放在数学模式的限定符之外，而行间公式则应该放在数学模式限定符之内。

在数学模式中，需要表示上标，可以使用 `^` 来实现（下标则是 `_`）。**它默认只作用于之后的一个字符**，如果想对连续的几个字符起作用，请将这些字符用花括号 `{}` 括起来，例如：

```latex
\[ z = r\cdot e^{2\pi i}. \]
```

![image-20221226223356424](latex.assets/image-20221226223356424.png)

### 根式与分式

根式用 `\sqrt{·}` 来表示，分式用 `\frac{·}{·}` 来表示（第一个参数为分子，第二个为分母）。

```latex
\documentclass{article}
\usepackage{amsmath}
\begin{document}
$\sqrt{x}$, $\frac{1}{2}$.

\[ \sqrt{x}, \]

\[ \frac{1}{2}. \]
\end{document}
```

可以发现，在行间公式和行内公式中，分式的输出效果是有差异的。如果要强制行内模式的分式显示为行间模式的大小，可以使用 `\dfrac`, 反之可以使用 `\tfrac`。

> 在行内写分式，你可能会喜欢 `xfrac` 宏包提供的 `\sfrac` 命令的效果。

> 排版繁分式，你应该使用 `\cfrac` 命令。

### 运算符

```latex
\[ \pm\; \times \; \div\; \cdot\; \cap\; \cup\;
\geq\; \leq\; \neq\; \approx \; \equiv \]
```

![image-20221226223930316](latex.assets/image-20221226223930316.png)

连加、连乘、极限、积分等大型运算符分别用 `\sum`, `\prod`, `\lim`, `\int` 生成。他们的上下标在行内公式中被压缩，以适应行高。我们可以用 `\limits` 和 `\nolimits` 来强制显式地指定是否压缩这些上下标。例如：

```latex
$ \sum_{i=1}^n i\quad \prod_{i=1}^n $
$ \sum\limits _{i=1}^n i\quad \prod\limits _{i=1}^n $
\[ \lim_{x\to0}x^2 \quad \int_a^b x^2 dx \]
\[ \lim\nolimits _{x\to0}x^2\quad \int\nolimits_a^b x^2 dx \]
```

$ \sum_{i=1}^n i\quad \prod_{i=1}^n$

$\sum\limits _{i=1}^n i\quad \prod\limits _{i=1}^n$

$\lim_{x\to0}x^2 \quad \int_a^b x^2 dx$

$\lim\nolimits _{x\to0}x^2\quad \int\nolimits_a^b x^2 dx$

多重积分可以使用 `\iint`, `\iiint`, `\iiiint`, `\idotsint` 等命令输入。

```latex
\[ \iint\quad \iiint\quad \iiiint\quad \idotsint \]
```

$ \iint\quad \iiint\quad \iiiint\quad \idotsint$

### 矩阵

`amsmath` 的 `pmatrix`, `bmatrix`, `Bmatrix`, `vmatrix`, `Vmatrix` 等环境可以在矩阵两边加上各种分隔符。

```latex
\[ \begin{pmatrix} a&b\\c&d \end{pmatrix} \quad
\begin{bmatrix} a&b\\c&d \end{bmatrix} \quad
\begin{Bmatrix} a&b\\c&d \end{Bmatrix} \quad
\begin{vmatrix} a&b\\c&d \end{vmatrix} \quad
\begin{Vmatrix} a&b\\c&d \end{Vmatrix} \]
```

$ \begin{pmatrix} a&b\\c&d \end{pmatrix} \quad
\begin{bmatrix} a&b\\c&d \end{bmatrix} \quad
\begin{Bmatrix} a&b\\c&d \end{Bmatrix} \quad
\begin{vmatrix} a&b\\c&d \end{vmatrix} \quad
\begin{Vmatrix} a&b\\c&d \end{Vmatrix}$

使用 `smallmatrix` 环境，可以生成行内公式的小矩阵。

